{"version":3,"sources":["helpers/i18n/index.ts","components/errorHandler/ErrorBoundaryInfo.tsx","components/errorHandler/ErrorBoundary.tsx","services/StorageService.ts","components/languageSwitcher/LanguageSwitcher.tsx","helpers/browserHistory.ts","containers/layout/horizontalNav/logout/Logout.tsx","containers/layout/horizontalNav/topSeparator/TopSeparator.tsx","containers/layout/horizontalNav/notificationIcon/notificationIcon.tsx","containers/layout/horizontalNav/HorizontalNav.tsx","services/api/UserAPI.ts","constants/api/v1.ts","components/login/LoginForm.tsx","components/shared/Spinner/LoadingSpinner.tsx","components/login/LoginPage.tsx","stores/growlStore/growlStore.ts","stores/growlStore/growlEvents.ts","components/shared/growl/Growl.tsx","components/users/userList/helpers/makeColumns.ts","components/users/userList/helpers/columnsFormatter.tsx","components/users/userList/helpers/rowFormatter.tsx","components/users/userList/UserListPage.tsx","components/shared/actionPanel/ActionPanel.tsx","components/users/NewUser.tsx","components/shared/articleCardEntry/ArticleCardEntry.tsx","components/homepage/searchBar/SearchBar.tsx","components/shared/addNewButton/AddNewButton.tsx","components/homepage/Homepage.tsx","containers/layout/themes/darckGreenTheme.ts","containers/layout/Layout.tsx","containers/protection/ProtectionWrapper.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","lng","load","fallbackLng","debug","interpolation","escapeValue","ErrorBoundaryInfo","t","useTranslation","useSuspense","ErrorBoundary","state","hasError","error","errorInfo","console","this","props","children","React","Component","StorageService","login","user","email","token","localStorage","setItem","logout","clear","isLoggedIn","getItem","getAccessToken","getUserLogin","getUserEmail","getCurrentLanguage","setCurrentLanguage","newVal","setToken","LanguageSwitcher","useState","language","currentLng","setCurrentLng","lngChange","newLng","changeLanguage","then","className","DefaultButton","text","toUpperCase","role","aria-haspopup","menuAs","onClick","menuProps","onDismiss","ev","shiftKey","preventDefault","items","directionalHintFixed","history","createBrowserHistory","Logout","IconButton","iconProps","iconName","push","window","location","reload","TopSeparator","style","width","height","margin","backgroundColor","NotificationIcon","size","fontSize","HorizontalNav","menuItems","key","id","cursor","CommandBar","styles","root","background","Stack","horizontal","verticalAlign","tokens","childrenGap","Persona","PersonaSize","size40","Axios","defaults","headers","common","UserAPI","password","a","method","baseURL","process","url","data","result","getUsers","createUser","confirm_password","updateUser","updatePassword","password_confirm","deleteUser","LoginForm","handleLoginChange","handlePasswordChange","submit","onSubmit","type","placeholder","onChange","value","toString","disabled","length","href","LoadingSpinner","Spinner","label","ariaLive","labelPosition","LoginPage","setLogin","setPassword","isLoading","setIsLoading","validateForm","Fabric","e","target","res","catch","err","finally","growlState","createStore","title","description","MessageBarType","warning","isVisible","showMessage","timeGap","authToken","createEvent","hideGrowl","Growl","useStore","MessageBar","messageBarType","info","makeColumns","name","minWidth","maxWidth","fieldName","isRowHeader","isResizable","columnFormatter","fetchData","item","index","column","fieldContent","date","Date","formattedDate","Intl","DateTimeFormat","year","month","day","hour","minute","format","menuIconProps","directionalHint","DirectionalHint","leftCenter","callback","rowStyle","renderRow","defaultRender","DetailsRow","UserListPage","users","setUsers","isDataLoaded","setIsDataLoaded","log","useEffect","ShimmeredDetailsList","setKey","columns","selectionMode","SelectionMode","none","shimmerLines","enableShimmer","onRenderRow","onRenderItemColumn","ActionPanel","header","callBack","cancelCallBack","NewUser","setEmail","setPass","confirmPass","setConfirmPass","saveUser","TextField","PrimaryButton","primaryIconStyle","mergeStyles","color","primaryUnlockIconStyle","secondaryIconStyle","ArticleCardEntry","tags","author","publishDay","viewNumber","commentNumber","isPrivate","dir","FontIcon","map","Separator","toLocaleDateString","stubTags","SearchBar","ChoiceGroup","defaultSelectedKey","options","required","Math","random","AddNewButton","Homepage","greenTheme","createTheme","defaultFontStyle","fontFamily","fontWeight","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","loadTheme","WrappedComponent","ProtectionWrapper","path","component","render","match","initializeIcons","on","payload","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc87d072.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    // load translation from /public/\n    .use(Backend)\n    // detect user language\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    .init({\n        lng: 'ru',\n        load: 'currentOnly',\n        fallbackLng: 'ru',\n        debug: false,\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        }\n    });\n\n\nexport default i18n;\n\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18n from '../../helpers/i18n'\n\nconst ErrorBoundaryInfo = () => {\n    const { t } = useTranslation('error_handler', { i18n, useSuspense: false });\n    return (\n        <>\n            <h1>{t('error_boundary.title')}</h1>\n            <p>{t('error_boundary.description')}</p>\n        </>\n    )\n}\n\nexport default ErrorBoundaryInfo;\n\n","import React, {ErrorInfo, ReactNode} from 'react';\nimport ErrorBoundaryInfo from \"./ErrorBoundaryInfo\";\n\nclass ErrorBoundary extends React.Component {\n     state = { hasError: false };\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        console.error(error, errorInfo);\n    }\n\n    render(): ReactNode {\n        if (this.state.hasError) {\n            return <>\n                <ErrorBoundaryInfo />\n            </>;\n        }\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;","import {IUserDTO} from \"../model/user/IUserDTO\";\n\nexport class StorageService {\n    static login = ({user: {login, email}, token}: IUserDTO) => {\n        localStorage.setItem('columnist_login', login);\n        localStorage.setItem('columnist_email', email);\n        localStorage.setItem('columnist_accessToken', token);\n    };\n    static logout = () => {\n        localStorage.clear();\n    };\n    static isLoggedIn = (): boolean => {\n        return localStorage.getItem('columnist_accessToken') !== null;\n    };\n\n    static getAccessToken = (): string | null => {\n        return localStorage.getItem('columnist_accessToken');\n    };\n    static getUserLogin = () => {\n        return localStorage.getItem('columnist_login');\n    };\n    static getUserEmail = () => {\n        return localStorage.getItem('columnist_email');\n    };\n    static getCurrentLanguage = () => {\n        return localStorage.getItem('i18nextLng') || 'en';\n    }\n    static setCurrentLanguage = (newVal: string) => {\n        return localStorage.setItem('i18nextLng', newVal);\n    }\n\n    static setToken = (token: string) => {\n        localStorage.setItem('columnist_accessToken', token);\n    }\n\n}\n","import React, { useState } from \"react\";\nimport \"./LanguageSwitcher.scss\"\nimport { StorageService } from \"../../services/StorageService\";\nimport { DefaultButton, IContextualMenuProps, ContextualMenu } from 'office-ui-fabric-react';\nimport i18n from '../../helpers/i18n'\n\nexport const LanguageSwitcher = () => {\n    const [currentLng, setCurrentLng] = useState(i18n.language || StorageService.getCurrentLanguage());\n\n    const lngChange = (newLng: string) => {\n        i18n.changeLanguage(newLng)\n            .then(() => {\n                setCurrentLng(i18n.language)\n            })\n    }\n\n    const menuProps: IContextualMenuProps = {\n        // disable dismiss if shift key is held down while dismissing\n        onDismiss: ev => {\n            if (ev && ev.shiftKey) {\n                ev.preventDefault();\n            }\n        },\n        items: [\n        ],\n        directionalHintFixed: true,\n    };\n\n    const langPopUp = () => {\n        return <>\n            <div className=\"lang-list\">\n                <div className=\"lang-item\"\n                     onClick={() => {lngChange('ru')}} >\n                    ru\n                </div>\n                <div className=\"lang-item\"\n                     onClick={() => {lngChange('en')}} >en</div>\n            </div>\n        </>\n    }\n\n    return <>\n        <div className=\"lng-switcher-btn\">\n            <DefaultButton text={currentLng.toUpperCase()}\n                           role=\"button\"\n                           aria-haspopup={false}\n                           menuAs={langPopUp}\n                           menuProps={menuProps}\n            />\n\n        </div>\n    </>\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React from \"react\";\nimport { IconButton } from \"office-ui-fabric-react\";\nimport { StorageService } from \"../../../../services/StorageService\";\nimport { history } from \"../../../../helpers/browserHistory\";\nimport \"./Logout.scss\";\n\nexport const Logout = () => {\n    return <>\n        <IconButton\n            className=\"logout-btn\"\n            iconProps={{ iconName: \"Leave\" }}\n            onClick={() => {\n                StorageService.logout();\n                history.push(\"/\");\n                window.location.reload();\n            }}\n        />\n    </>\n}","import React from \"react\";\n\nexport const TopSeparator = () => {\n    return <>\n        {/*<span className=\"top-separator\">|</span>*/}\n        <div className=\"far-items-separator\" style={{width: \"1px\", height: \"23px\", margin: \"0px 12px 0px 10px\", backgroundColor: \"#494f5e\"}}>\n\n        </div>\n    </>\n}","import React from \"react\";\nimport { IconButton } from \"office-ui-fabric-react\";\n\nexport const NotificationIcon = () => {\n    return <>\n        <IconButton\n            className=\"logout-btn\"\n            size={64}\n\n            iconProps={{ iconName: \"Ringer\", style: {fontSize: \"20px\"} }}\n            onClick={() => {    }}\n        />\n    </>\n}","import React from \"react\";\nimport i18n from \"../../../helpers/i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport { LanguageSwitcher } from \"../../../components/languageSwitcher/LanguageSwitcher\";\nimport { Logout } from \"./logout/Logout\";\nimport \"./HorizontalNav.scss\"\nimport { StorageService } from \"../../../services/StorageService\";\nimport { IPersonaSharedProps, Persona, PersonaInitialsColor, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { DefaultPalette, Stack, IStackStyles, IStackTokens } from 'office-ui-fabric-react';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { TopSeparator } from \"./topSeparator/TopSeparator\";\nimport { Separator } from 'office-ui-fabric-react/lib/Separator';\nimport { NotificationIcon } from \"./notificationIcon/notificationIcon\";\nimport { CommandBar, ICommandBarItemProps } from 'office-ui-fabric-react/lib/CommandBar';\nimport { history } from \"../../../helpers/browserHistory\";\n\nexport const HorizontalNav = () => {\n    const { t } = useTranslation('top_menu', { i18n, useSuspense: false });\n    const isLoggedIn = StorageService.isLoggedIn();\n\n    const farItemsWrapperStyle: IStackStyles = {\n        root: {\n            height: 99\n        }\n    };\n\n    const menuItems: ICommandBarItemProps[] = [\n        {\n            key: 'home',\n            text: t('home'),\n            iconProps: { iconName: 'Home' },\n            onClick: () => history.push('/')\n        },\n        {\n            key: 'random',\n            text: t('random'),\n            iconProps: { iconName: 'UnknownSolid' },\n            onClick: () => history.push('/random')\n        },\n        {\n            key: 'users',\n            text: t('users'),\n            iconProps: { iconName: 'People' },\n            onClick: () => history.push('/users')\n        },\n        {\n            key: 'about',\n            text: t('about'),\n            iconProps: { iconName: 'WavingHand' },\n            onClick: () => history.push('/about')\n        },\n    ]\n    const topMenuStyles = {\n        root: {\n            // width: \"800px\"\n            background: 'transparent'\n        }\n    }\n\n    return (<>\n        <div id=\"horizontal-nav-wrapper\">\n\n            <div id=\"main-logo\" className=\"marginless\">\n                <h2 className=\"text-logo\"\n                    style={{cursor: 'pointer'}}\n                    onClick={() => history.push('/')}\n                >\n                    SpeakClub\n                </h2>\n            </div>\n\n            <div id=\"top-menu\">\n                <CommandBar items={menuItems}\n                            styles={topMenuStyles}\n\n                />\n            </div>\n\n            <div id=\"far-items\">\n                <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 10 }} styles={farItemsWrapperStyle}>\n\n\n                    <LanguageSwitcher/>\n\n                    {StorageService.isLoggedIn() &&\n                    <>\n                        <TopSeparator/>\n                        <Persona text=\"Павел Дуров\" size={PersonaSize.size40}/> <TopSeparator/>\n                        <NotificationIcon/>\n                        <Logout/>\n                    </>}\n                </Stack>\n            </div>\n        </div>\n\n    </>)\n}\n","import Axios from 'axios';\nimport { StorageService } from \"../StorageService\";\nimport { LOGIN_URL, USER_URL } from \"../../constants/api/v1\";\n\nAxios.defaults.headers.common['Authorization'] = `Bearer ${StorageService.getAccessToken()}`;\n\n\nexport class UserAPI {\n    static login = async (login: string, password: string) => {\n        const result = await Axios({\n            method: 'post',\n            baseURL: process.env.REACT_APP_BASE_URL,\n            url: LOGIN_URL,\n            data: {\n                login,\n                password\n            },\n        });\n\n        return result.data.data;\n    }\n\n    static getUsers = async () => {\n        const result = await Axios({\n            method: 'get',\n            baseURL: process.env.REACT_APP_BASE_URL,\n            url: USER_URL\n        })\n\n        return result.data.data;\n    }\n\n    static createUser = async (login: string, email: string, password: string, confirm_password: string) => {\n        const result = await Axios({\n            method: 'put',\n            baseURL: process.env.REACT_APP_BASE_URL,\n            url: USER_URL,\n            data: {\n                login,\n                email,\n                password,\n                confirm_password\n            }\n        })\n\n        return result.data;\n    }\n\n    static updateUser = async (id: number | string, login: string, email: string) => {\n        const result = await Axios({\n            method: 'post',\n            baseURL: process.env.REACT_APP_BASE_URL,\n            url: USER_URL\n        })\n\n        return result.data;\n    }\n\n    static updatePassword = async (id: number | string, password: string, password_confirm: string) => {\n        const result = await Axios({\n            method: 'post',\n            baseURL: process.env.REACT_APP_BASE_URL,\n            url: USER_URL\n        })\n\n        return result.data;\n    }\n\n    static deleteUser = async (id: string | number) => {\n        const result = await Axios({\n            method: 'delete',\n            baseURL: process.env.REACT_APP_BASE_URL,\n            url: `${USER_URL}/${id}`\n        })\n\n        return result.data;\n    }\n}\n","export const LOGIN_URL = '/users/authorization';\nexport const USER_URL = '/users';\nexport const GATE_URL = '/gates';\nexport const SOURCE_URL = '/sources';\nexport const SOURCE_TYPE_URL = '/sources/type';\n\nexport const SERVER_URL = '/servers';\nexport const API_KEY_URL = '/apiKeys';\n\nexport const CLOUD_INIT = '/cloud/init';\nexport const CLOUD_SEARCHER = '/cloud/searcherInstance';\n\nexport const SEARCHER_URL = '/searchers';\n\nexport const TEST_SEARCH_URL = '';","import React, { ChangeEvent } from \"react\";\nimport i18n from '../../helpers/i18n'\nimport { useTranslation } from \"react-i18next\";\n\ninterface IProps {\n    handleLoginChange: (e: ChangeEvent) => void;\n    handlePasswordChange: (e: ChangeEvent) => void;\n    submit: () => void;\n    login: string;\n    password: string;\n}\n\nconst LoginForm = ({ login, password, handleLoginChange, handlePasswordChange, submit }: IProps) => {\n    const { t } = useTranslation('user_handling', { i18n, useSuspense: false });\n\n    return (\n\n        <form className=\"login-form\" onSubmit={submit}>\n            <h2>COLUMNIST</h2>\n            <input className=\"input-login\" type=\"text\" placeholder={t('login')} onChange={handleLoginChange} onSubmit={submit}/>\n            <input className=\"input-login\" type=\"password\" placeholder={t('password')} onChange={handlePasswordChange} onSubmit={submit}/>\n                           <input type=\"submit\" value={t('submit').toString()}\n                                  id=\"login-submit-btn\"\n                           onClick={submit}\n                           disabled={login.length === 0 || password.length === 0}/>\n            <div className=\"link-container\">\n                <a href=\"#\">{t('forgot_pass_link')}</a>\n            </div>\n\n        </form>\n    )\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport i18n from '../../../helpers/i18n'\nimport { useTranslation } from \"react-i18next\";\nimport { Spinner } from 'office-ui-fabric-react/lib/Spinner';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = () => {\n    const { t } = useTranslation('misc', { i18n, useSuspense: false });\n    return (\n        <>\n            <Spinner className=\"loading-spinner\" label={t('loading')} ariaLive=\"assertive\" labelPosition=\"right\" />\n        </>\n    )\n}\n\nexport default LoadingSpinner;\n","import React, { ChangeEvent, SyntheticEvent, useState } from \"react\";\nimport { Fabric } from \"@fluentui/react\";\nimport \"./Login.scss\"\nimport { UserAPI } from \"../../services/api/UserAPI\";\nimport { StorageService } from \"../../services/StorageService\";\nimport { IUserDTO } from \"../../model/user/IUserDTO\";\nimport LoginForm from \"./LoginForm\";\nimport LoadingSpinner from \"../shared/Spinner/LoadingSpinner\";\nimport { history } from \"../../helpers/browserHistory\";\nimport { LanguageSwitcher } from \"../languageSwitcher/LanguageSwitcher\";\nimport { HorizontalNav } from \"../../containers/layout/horizontalNav/HorizontalNav\";\n\nconst LoginPage = () => {\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleSubmit = () => {\n        if (validateForm()) {\n            setIsLoading(true);\n            UserAPI.login(login, password)\n                .then((res: IUserDTO) => {\n                    StorageService.login(res);\n                    history.push(\"/\");\n                    window.location.reload();\n                })\n                .catch(err => {\n                    console.error(err.toString());\n                    StorageService.setToken(\"test\");\n                    history.push(\"/\");\n                    window.location.reload();\n                })\n                .finally(() => setIsLoading(false));\n        }\n    }\n\n    const validateForm = () => {\n        return login.length && password.length;\n    };\n\n    const handleLoginChange = (e: ChangeEvent) => {\n        setLogin((e.target as HTMLTextAreaElement).value);\n    }\n    const handlePasswordChange = (e: ChangeEvent) => {\n        setPassword((e.target as HTMLTextAreaElement).value);\n    }\n\n    return (\n        <Fabric className=\"login-container\">\n            <HorizontalNav />\n            {isLoading ?\n                <LoadingSpinner/> :\n                <LoginForm handleLoginChange={handleLoginChange} handlePasswordChange={handlePasswordChange}\n                           submit={handleSubmit} login={login} password={password}/>\n            }\n        </Fabric>\n    )\n}\n\nexport default LoginPage;\n","import { createStore } from \"effector\";\nimport { MessageBarType } from \"office-ui-fabric-react\";\nimport { IGrowl } from \"../../model/misc/IGrowl\";\nimport { StorageService } from \"../../services/StorageService\";\n\nexport const growlState = createStore({title: '', description: '', type: MessageBarType.warning, isVisible: false} as IGrowl);\nexport const userState = createStore({ timeGap: 0, authToken: StorageService.getAccessToken() });","import { createEvent } from \"effector\";\nimport { IGrowl } from \"../../model/misc/IGrowl\";\n\nexport const showMessage = createEvent<IGrowl>(\"show message\");\nexport const hideGrowl = createEvent<IGrowl | void>(\"hide growl\");\n","import React, { PureComponent, useState } from \"react\";\nimport { MessageBar, MessageBarType } from \"office-ui-fabric-react\";\nimport { IGrowl } from \"../../../model/misc/IGrowl\";\nimport { useStore } from \"effector-react\";\nimport { growlState } from \"../../../stores/growlStore/growlStore\";\nimport { hideGrowl } from \"../../../stores/growlStore/growlEvents\";\nimport \"./Growl.scss\"\n\nexport const Growl = () => {\n    const value = useStore(growlState);\n\n    return (<>\n        {value.isVisible && <MessageBar messageBarType={value.type || MessageBarType.info}\n                                        className=\"growl-bar\"\n                                        onDismiss={() => hideGrowl()}\n        >\n            <b>{value.title || ''} </b>\n            {value.description || ''}\n        </MessageBar>}\n    </>)\n\n}\n","import { TFunction } from \"i18next\";\n\n/**\n * Returns translated columns for the source table\n * @param t - translator function\n */\n\nexport const makeColumns = (t: TFunction) => [\n    {\n        key: 'user-id',\n        name: t('admin:entity.id'),\n        minWidth: 30,\n        maxWidth: 30,\n        fieldName: 'id',\n        isRowHeader: true,\n        isResizable: true,\n        data: 'string',\n    },\n    {\n        key: 'user-login',\n        name: t('admin:entity.login'),\n        minWidth: 160,\n        fieldName: 'login',\n        isRowHeader: true,\n        isResizable: true,\n        data: 'string',\n    },\n    {\n        key: 'user-email',\n        name: t('admin:entity.email'),\n        minWidth: 160,\n        fieldName: 'email',\n        isRowHeader: true,\n        isResizable: true,\n        data: 'string',\n    },\n    {\n        key: 'user-creationDate',\n        name: t('admin:entity.creationDate'),\n        minWidth: 200,\n        fieldName: 'creationDate',\n        isRowHeader: true,\n        isResizable: true,\n        data: 'string',\n    },\n    {\n        key: 'user-updatedOn',\n        name: t('admin:entity.updatedOn'),\n        minWidth: 200,\n        fieldName: 'updatedOn',\n        isRowHeader: true,\n        isResizable: true,\n        data: 'string',\n    },\n    {\n        key: 'user-actions',\n        name: t('admin:table.actions'),\n        minWidth: 160,\n        fieldName: 'id',\n        isRowHeader: true,\n        isResizable: true,\n        data: 'string',\n    },\n]","import React from \"react\";\nimport { StorageService } from \"../../../../services/StorageService\";\nimport { IconButton } from 'office-ui-fabric-react';\nimport { DirectionalHint } from \"@fluentui/react\";\nimport { UserAPI } from \"../../../../services/api/UserAPI\";\n\nconst removeUser = (id: number, callback: () => void) => {\n    UserAPI.deleteUser(id)\n        .then(() => {})\n        .catch(() => {})\n        .finally(() => {\n            callback();\n        })\n}\n\nexport const columnFormatter = (fetchData: () => void) => {\n    return (item: any, index: any, column: any) => {\n        const fieldContent = item[column.fieldName as string];\n\n        switch (column.key) {\n            case 'user-creationDate':\n            case 'user-updatedOn':\n                const date = new Date(fieldContent);\n                const formattedDate = new Intl.DateTimeFormat(StorageService.getCurrentLanguage(), { year: 'numeric', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }).format(date);\n                return <span>{formattedDate}</span>\n            case 'user-actions':\n                return <>\n                \n                <IconButton\n                        className=\"\"\n                        menuIconProps={{ iconName: \"PasswordField\" }}\n                    />\n                    <IconButton\n                        className=\"\"\n                        iconProps={{ iconName: \"Edit\" }}\n                    />\n                    <IconButton\n                        className=\"\"\n                        menuIconProps={{ iconName: \"Delete\" }}\n\n                        menuProps={{\n                            directionalHint: DirectionalHint.leftCenter,\n                            items: [{ key: 'confirm-del', iconProps: {iconName: 'CheckMark'}, onClick: () => {removeUser(item.id, fetchData)}}],\n                        }}\n                    />\n                    </>\n            default:\n                return <span>{fieldContent}</span>;\n        }\n\n    };\n};","import React from \"react\";\nimport { DetailsRow } from \"office-ui-fabric-react\";\nimport { history } from \"../../../../helpers/browserHistory\";\n\nconst rowStyle = {\n    root: {\n        cursor: 'pointer'\n    }\n}\n\nexport const renderRow = (props: any, defaultRender: any): JSX.Element => {\n    return (\n        <DetailsRow {...props}\n                    styles={rowStyle}\n                    onClick={() => history.push(`/users/${props.item.id}`)}\n        />\n    );\n}","import React, { useEffect, useState, FunctionComponent } from \"react\";\nimport { UserAPI } from \"../../../services/api/UserAPI\";\nimport { IUser } from \"../../../model/user/IUser\";\nimport { IconButton } from \"office-ui-fabric-react\";\nimport { makeColumns } from \"./helpers/makeColumns\";\nimport { SelectionMode } from \"office-ui-fabric-react/lib/DetailsList\";\nimport { columnFormatter } from \"./helpers/columnsFormatter\";\nimport { ShimmeredDetailsList } from \"office-ui-fabric-react/lib/ShimmeredDetailsList\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../../../helpers/i18n\";\nimport { renderRow } from \"./helpers/rowFormatter\";\nimport { history } from \"../../../helpers/browserHistory\";\n\ninterface IProps {\n\n}\n\nexport const UserListPage: FunctionComponent<IProps> = () => {\n\n    const [users, setUsers] = useState<IUser[]>([]);\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\n\n    const { t } = useTranslation(['admin', 'error_handler', 'messages'], { i18n, useSuspense: false });\n\n    const fetchData = () => {\n        setIsDataLoaded(false);\n        UserAPI.getUsers()\n            .then((res) => {\n                setUsers(res.items);\n            console.log(res.items);\n        })\n            .catch((err) => {\n                console.error(err.toString());\n            })\n            .finally(() => {\n                setIsDataLoaded(true);\n            })\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (<>\n        <h2>{t('admin:page.title')}</h2>\n        <IconButton\n            className=\"add-new-btn\"\n            iconProps={{ iconName: \"Add\" }}\n            onClick={() => history.push('users/new')}\n        />\n        <ShimmeredDetailsList items={users}\n                              className=\"dark-fluent-table\"\n                              setKey=\"user-list-items\"\n                              columns={makeColumns(t)}\n                              selectionMode={SelectionMode.none}\n                              shimmerLines={10}\n                              enableShimmer={!isDataLoaded}\n                              onRenderRow={renderRow}\n                              onRenderItemColumn={columnFormatter(fetchData)}\n        />\n\n\n    </>)\n}\n","import React, { FunctionComponent } from \"react\";\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react';\nimport \"./ActionPanel.scss\"\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../../../helpers/i18n\";\n\ninterface IProps {\n    header?: string;\n    callBack?: () => any;\n    cancelCallBack?: () => any;\n}\n\n/**\n * For Edit/Add New perposes\n * @param props\n * @constructor\n */\nexport const ActionPanel: FunctionComponent<IProps> = (props) => {\n\n    const { t } = useTranslation(['misc', 'error_handler', 'messages'], { i18n, useSuspense: false });\n    const {header, callBack, cancelCallBack} = props;\n    return (\n        <div className=\"action-panel\">\n\n            <div>\n                <DefaultButton\n                    id=\"cross-close-button\"\n                    text={t(\"misc:action_panel.cancel\")}\n                    iconProps={{ iconName: \"Cancel\" }}\n                    onClick={props.cancelCallBack}\n                />\n            </div>\n\n            {header && <h3>\n                {header}\n            </h3>}\n            <div className=\"form-container\">\n                {props.children}\n            </div>\n        </div>\n    )\n}","import React, { FunctionComponent, useState } from \"react\";\nimport { ActionPanel } from \"../shared/actionPanel/ActionPanel\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../../helpers/i18n\";\nimport { history } from \"../../helpers/browserHistory\";\nimport { TextField } from \"office-ui-fabric-react/lib/TextField\";\nimport { PrimaryButton } from \"office-ui-fabric-react\";\nimport { UserAPI } from \"../../services/api/UserAPI\";\n\ninterface IProps {\n\n}\n\nexport const NewUser: FunctionComponent<IProps> = () => {\n    const { t } = useTranslation(['admin', 'error_handler', 'messages'], { i18n, useSuspense: false });\n    const [login, setLogin] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPass] = useState('');\n    const [confirmPass, setConfirmPass] = useState('');\n\n    const saveUser = () => {\n        UserAPI.createUser(login, email, password, confirmPass)\n            .then((res) => {\n                history.push('/users');\n            })\n            .catch(() => {})\n    }\n\n    return <>\n        <h2>{t('admin:page.title')}</h2>\n        <ActionPanel cancelCallBack={() => history.push('/users')}>\n\n            <div className=\"form-wrapper\">\n                <form onSubmit={saveUser}>\n                    <h3 className=\"form-title\">{t(\"admin:page.new_title\")}</h3>\n                    <TextField placeholder={t(\"admin:entity.login\")}\n                               className=\"big-input\"\n                               onChange={(e, newVal) => setLogin(newVal as unknown as string)}/>\n\n                    <TextField placeholder={t(\"admin:entity.email\")}\n                               type={'email'}\n                               className=\"big-input\"\n                               onChange={(e, newVal) => setEmail(newVal as unknown as string)}/>\n\n                    <TextField placeholder={t(\"admin:entity.password\")}\n                               type={'password'}\n                               className=\"big-input\"\n                               onChange={(e, newVal) => setPass(newVal as unknown as string)}/>\n\n                    <TextField placeholder={t(\"admin:entity.confirm_password\")}\n                               className=\"big-input\"\n                               type={'password'}\n                               onChange={(e, newVal) => setConfirmPass(newVal as unknown as string)}/>\n\n\n\n                    <div className=\"modal-button-group center\">\n                        <PrimaryButton text={t(\"admin:new_form.confirm\")}\n                                       className=\"big-button\"\n                                       onClick={saveUser}/>\n                    </div>\n                </form>\n\n            </div>\n        </ActionPanel>\n        </>\n}\n","import React, { FunctionComponent } from \"react\";\nimport \"./ArticleCardEntry.scss\"\nimport { DateFormat, TagFormat } from \"../../../model/types\";\nimport { FontIcon } from 'office-ui-fabric-react/lib/Icon';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\nimport { Separator } from 'office-ui-fabric-react/lib/Separator';\n\ninterface IProps {\n    title: string;\n    tags: TagFormat[];\n    author: string;\n    publishDay: DateFormat;\n    viewNumber: number;\n    commentNumber: number;\n    isPrivate: boolean;\n}\n\nconst primaryIconStyle = mergeStyles({\n    fontSize: 21,\n    height: 21,\n    width: 21,\n    margin: '0 8px',\n    color: \"#C02A4E\"\n});\nconst primaryUnlockIconStyle = mergeStyles({\n    fontSize: 21,\n    height: 21,\n    width: 21,\n    margin: '0 8px',\n    color: \"#6DAD57\"\n});\n\nconst secondaryIconStyle = mergeStyles({\n    fontSize: 16,\n    height: 12,\n    width: 12,\n    margin: '0 6px',\n    color: '#4c515b'\n});\n\nexport const ArticleCardEntry: FunctionComponent<IProps> = ({ title, tags, author, publishDay, viewNumber, commentNumber, isPrivate }) => {\n    return <>\n        <div className=\"article-card\">\n\n            <div className=\"ms-Grid\" dir=\"ltr\">\n\n                <div className=\"ms-Grid-row\">\n                    <div className=\"ms-Grid-col ms-sm10 ms-md11\">\n                        <h3 className=\"marginless entry-title\">\n                            {title}\n                        </h3>\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm2 ms-md1\">\n                        <FontIcon iconName={`${isPrivate ? \"Lock\" : \"Unlock\"}`}\n                                  className={`${isPrivate ? primaryIconStyle : primaryUnlockIconStyle} right article-access`}/>\n                    </div>\n                </div>\n\n                <div className=\"ms-Grid-row\">\n                    <div className=\"ms-Grid-col ms-sm12 tag-container\">\n                        {tags.map((item) => (\n                            <span className=\"entry-tag\">{item.label}</span>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"ms-Grid-row\">\n                    <div className=\"ms-Grid-col ms-sm12\">\n                        <Separator />\n                    </div>\n                </div>\n\n                <div className=\"ms-Grid-row bottom-info\">\n                    <div className=\"ms-Grid-col ms-sm6 ms-md8\">\n                        <FontIcon iconName={\"ReminderPerson\"}\n                                  className={secondaryIconStyle}/>\n                                  <span className=\"bottom-text-item\">{author}</span>\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm6 ms-md4 items-right\">\n                        <FontIcon iconName={\"Calendar\"}\n                                  className={secondaryIconStyle}/>\n                                  <span className=\"bottom-text-item\">{new Date(publishDay).toLocaleDateString()}</span>\n\n                        <FontIcon iconName={\"RedEye\"}\n                                  className={secondaryIconStyle}/>\n                                  <span className=\"bottom-text-item\">{viewNumber}</span>\n\n                        <FontIcon iconName={\"Comment\"}\n                                  className={secondaryIconStyle}/>\n                                  <span className=\"bottom-text-item\">{commentNumber}</span>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    </>\n}","import React from \"react\";\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport \"./SearchBar.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../../../helpers/i18n\";\nimport { ArticleCardEntry } from \"../../shared/articleCardEntry/ArticleCardEntry\";\nimport { TagFormat } from \"../../../model/types\";\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\n\n\n\n\nconst searchIconStyle = {\n    root: {\n        cursor: \"pointer\"\n    }\n}\n\nconst iconProps = {\n    iconName: 'Search',\n    styles: searchIconStyle\n}\n\nconst stubTags: TagFormat[] = [\n    { label: \"#навальный\", url: \"#\" },\n    { label: \"#костин\", url: \"#\" },\n    { label: \"#фбк\", url: \"#\" },\n    { label: \"#наиляаскерзаде\", url: \"#\" },\n]\n\nexport const SearchBar = () => {\n\n    const { t } = useTranslation('homepage', { i18n, useSuspense: false });\n\n    const options: IChoiceGroupOption[] = [\n        { key: 'A', text: 'Option A' },\n        { key: 'B', text: 'Option B' },\n        { key: 'D', text: 'Option D' },\n    ];\n\n    return <>\n        <ChoiceGroup defaultSelectedKey=\"B\" options={options}  label=\"Pick one\" required={true} />\n\n        <div className=\"article-entries-container\">\n            <ArticleCardEntry title={\"Какое-то название расследования \"} tags={stubTags} author={\"А.Навальный\"}\n                              publishDay={new Date()} viewNumber={2499} commentNumber={47}\n                              isPrivate={Math.random() > .5}/>\n            <ArticleCardEntry title={\"Какое-то название расследования \"} tags={stubTags} author={\"А.Навальный\"}\n                              publishDay={new Date()} viewNumber={2499} commentNumber={47}\n                              isPrivate={Math.random() > .5}/>\n            <ArticleCardEntry title={\"Какое-то название расследования \"} tags={stubTags} author={\"А.Навальный\"}\n                              publishDay={new Date()} viewNumber={2499} commentNumber={47}\n                              isPrivate={Math.random() > .5}/>\n            <ArticleCardEntry title={\"Какое-то название расследования \"} tags={stubTags} author={\"А.Навальный\"}\n                              publishDay={new Date()} viewNumber={2499} commentNumber={47}\n                              isPrivate={Math.random() > .5}/>\n        </div>\n    </>\n}","import React, { FunctionComponent } from \"react\";\nimport \"./AddNewButton.scss\";\n\ninterface IProps {\n    callBack: () => void;\n}\n\nexport const AddNewButton: FunctionComponent<IProps> = ({ callBack  }) => {\n    return <>\n            <div className=\"add-new-btn_container\" onClick={callBack}>\n                <span className=\"add-new-btn_icon\">\n                    +\n                </span>\n            </div>\n        </>\n}","import React from \"react\";\nimport { SearchBar } from \"./searchBar/SearchBar\";\nimport { history } from \"../../helpers/browserHistory\";\nimport { PrimaryButton, IconButton } from \"office-ui-fabric-react\";\nimport { AddNewButton } from \"../shared/addNewButton/AddNewButton\";\n\nexport const Homepage = () => {\n    return <>\n        <div className=\"home-search-container\">\n            <SearchBar />\n            <AddNewButton callBack={() => {}} />\n\n        </div>\n    </>\n}\n","import { createTheme } from 'office-ui-fabric-react';\n\nexport const greenTheme = createTheme({\n    defaultFontStyle: { fontFamily: 'Montserrat, Roboto, Helvetica Neue, sans-serif', fontWeight: 'normal' },\n    palette: {\n        themePrimary: '#f9bc60',\n        themeLighterAlt: '#0a0804',\n        themeLighter: '#281e10',\n        themeLight: '#4b391d',\n        themeTertiary: '#96713a',\n        themeSecondary: '#dca656',\n        themeDarkAlt: '#fac371',\n        themeDark: '#fbcd87',\n        themeDarker: '#fcdaa6',\n        neutralLighterAlt: '#004340',\n        neutralLighter: '#00423f',\n        neutralLight: '#003f3c',\n        neutralQuaternaryAlt: '#003b38',\n        neutralQuaternary: '#003835',\n        neutralTertiaryAlt: '#003633',\n        neutralTertiary: '#f0ecee',\n        neutralSecondary: '#f2eff1',\n        neutralPrimaryAlt: '#f5f2f4',\n        neutralPrimary: '#e8e4e6',\n        neutralDark: '#faf9f9',\n        black: '#fcfcfc',\n        white: '#004643',\n    }});\n","import React, { FunctionComponent } from \"react\";\nimport { Fabric } from \"@fluentui/react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./Layout.scss\"\nimport { HorizontalNav } from \"./horizontalNav/HorizontalNav\";\nimport { ProtectionWrapper } from \"../protection/ProtectionWrapper\";\nimport { Growl } from \"../../components/shared/growl/Growl\";\nimport { UserListPage } from \"../../components/users/userList/UserListPage\";\n\nimport { loadTheme } from 'office-ui-fabric-react';\nimport { darkTheme } from \"./themes/darkTheme\";\nimport { NewUser } from \"../../components/users/NewUser\";\nimport { Homepage } from \"../../components/homepage/Homepage\";\nimport { greenTheme } from \"./themes/darckGreenTheme\";\nloadTheme(greenTheme);\n\nconst Layout: FunctionComponent = () => {\n    return (\n        <Fabric className=\"app-container\">\n            <HorizontalNav />\n\n            <div className=\"content-wrapper\">\n                <div className=\"content-container\">\n                    <Growl />\n                    <Switch>\n                        <Route path=\"/users/new\" component={NewUser}/>\n                        <Route path=\"/users/:userId\" component={UserListPage} render={({match}) => <UserListPage />} />\n                        <Route path=\"/users\" component={UserListPage}/>\n\n                        <Route path=\"/\" component={Homepage}/>\n                    </Switch>\n                </div>\n            </div>\n        </Fabric>)\n}\n\nexport default ProtectionWrapper()(Layout);\n","import React, {ComponentClass, FunctionComponent} from \"react\";\nimport {StorageService} from \"../../services/StorageService\";\nimport LoginPage from \"../../components/login/LoginPage\";\n\n/**\n * HOC, to handle access to app components\n */\nexport const ProtectionWrapper = () => (WrappedComponent: ComponentClass | FunctionComponent) => {\n    return class WithProtection extends React.Component {\n        constructor(props: any) {\n            super(props);\n        }\n        render(): React.ReactNode {\n            if (!StorageService.isLoggedIn()) {\n                return <LoginPage />;\n            }\n            return (<WrappedComponent {...this.props} />);\n        }\n    };\n};\n","import React from 'react';\nimport './App.scss';\nimport ErrorBoundary from \"./components/errorHandler/ErrorBoundary\";\nimport Layout from \"./containers/layout/Layout\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { history } from \"./helpers/browserHistory\";\nimport { Route, Router } from \"react-router-dom\";\nimport LoginPage from \"./components/login/LoginPage\";\nimport { growlState } from \"./stores/growlStore/growlStore\";\nimport { hideGrowl, showMessage } from \"./stores/growlStore/growlEvents\";\nimport { IGrowl } from \"./model/misc/IGrowl\";\n\ninitializeIcons();\ngrowlState\n    .on(showMessage, (state, payload: IGrowl) => {\n        payload.isVisible = true;\n        return payload;\n    })\n    .on(hideGrowl, () => ({title: '', description: '', isVisible: false}));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ErrorBoundary>\n            <Router history={history}>\n                <Layout />\n                <Route path=\"/login\" component={LoginPage}/>\n            </Router>\n        </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and user)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './helpers/i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}